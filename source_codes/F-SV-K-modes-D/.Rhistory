{
np<-length(which(cid==p))
t_temp<-udata[which(cid==p),]
New_data<-vector()
NNew_data<-vector()
if(np==1){
modesset<-matrix(c(Data[which(Data[,1]==t_temp),2:nc]))
}else
{
for(j in 1:np)
{
NNew_data<-rbind(NNew_data,Data[Data[,1]==t_temp[j],])
}
for(q in 2:nc)
{
New_data<-cbind(NNew_data[,1],NNew_data[,q])
MModesset<-My_Nean_New_ratio_computing_modes(New_data)
modesset<-rbind(modesset,MModesset)
}
}
modesset<-as.matrix(modesset)
modesset<-matrix(c(t(modesset)))
new_modesset<-cbind(p,modesset)
NEW_modesset<-rbind(NEW_modesset,new_modesset)
}
nj<-as.matrix(NEW_modesset)
nj
Data
K
InitialCenters
a
Data<-as.matrix(Data)
nc<-ncol(Data)
if(is.null(InitialCenters)){
DDist<-K_initial_centers(Data,K)
DD<-length(DDist)
centers<-vector()
ICenters<-vector()
IniCenters<-vector()
for(m in 1:DD)
{
ICenters<-Data[Data[,1]==DDist[m],2:nc]
IniCenters<-cbind(m,ICenters)
centers<-rbind(centers,IniCenters)
}
}else{
for(n in 1:K)
{
ICenters<-Data[Data[,1]==InitialCenters[n],2:nc]
IniCenters<-cbind(n,ICenters)
centers<-rbind(centers,IniCenters)
}
}
ni<-as.matrix(centers)
udata<-as.matrix(unique(Data[,1]))
#????cid为??????????示????
cid<-matrix(0,nrow=1,ncol=K)
nr<-matrix(1,nrow=1,ncol=K)
nj<-vector()
D_Dist<-vector()
iter<-1
objectvalue<-vector()
dist<-vector()
{
{
ptm<-proc.time()
for(i in 1:length(udata))
{
Dist<-vector()
i_bolck_Newdata<-Data[Data[,1]==udata[i],]
NN<-Object_in_set(i_bolck_Newdata,ni)
if(NN!=0){
cid[i]<-NN
}else{
for(j in 1:K)
{
dist=membershipdegree(i_bolck_Newdata,ni,j,a)
Dist<-rbind(Dist,dist)
}
Fw_dist<-as.matrix(Dist)
ind<-which(Fw_dist==max(Fw_dist[,1]),arr.ind = T)[1]
cid[i]<-ind
}
}
nr<-table(cid)
temp_new_clusters<-vector()
modesset<-vector()
new_modesset<-vector()
NEW_modesset<-vector()
for(p in 1:K)
{
np<-length(which(cid==p))
t_temp<-udata[which(cid==p),]
New_data<-vector()
NNew_data<-vector()
if(np==1){
modesset<-matrix(c(Data[which(Data[,1]==t_temp),2:nc]))
}else
{
for(j in 1:np)
{
NNew_data<-rbind(NNew_data,Data[Data[,1]==t_temp[j],])
}
for(q in 2:nc)
{
New_data<-cbind(NNew_data[,1],NNew_data[,q])
MModesset<-My_Nean_New_ratio_computing_modes(New_data)
modesset<-rbind(modesset,MModesset)
}
}
modesset<-as.matrix(modesset)
modesset<-matrix(c(t(modesset)))
new_modesset<-cbind(p,modesset)
NEW_modesset<-rbind(NEW_modesset,new_modesset)
}
nj<-as.matrix(NEW_modesset)
if(length(ni)==length(nj))
{
if(all(nj==ni))
break
}
}
ni<-nj
iter<-iter+1
}
cat("time","\n")
print(proc.time()-ptm)
cat(nj)
}
nj
Data
Data<-as.matrix(Data)
Dens<-function(Data)
{
m<-ncol(Data)
udata<-as.matrix(unique(Data[,1]))
n<-nrow(udata)
Dens<-vector()
for(i in 1:n)
{
dens<-0
for(j in 2:m)
{
for(p in 1:n)
{
DData1<-Data[Data[,1]==udata[i],j]
DData2<-Data[Data[,1]==udata[p],j]
ss<-ratio_distance_between_objects(DData1,DData2)
dens<-dens+(1/n)%*%ss
}
}
Dens[i]<-dens
}
DDens<-as.matrix(Dens)
}
K_initial_centers<-function(Data,K)
{
m<-ncol(Data)
udata<-as.matrix(unique(Data[,1]))
n<-nrow(udata)
ddens<-Dens(Data)
rr<-which(ddens==max(ddens))
dist<-vector()
dist<-rbind(dist,rr)
xx<-0
mmm<-vector()
for(j in 1:n)
{
r<-0
for(p in 2:m)
{
r<-r+New_ratio_distance_between_objects(Data[Data[,1]==j,p],Data[Data[,1]==dist[1],p])%*%ddens[j]
}
if(r>xx)
{
xx<-r
m<-j
}
}
dist<-rbind(dist,m)
for(i in 3:K)
{
mindist<-vector()
for(j in 1:n)
{
yy<-99999
for(n in 1:length(dist))
{
t<-0
for(p in 2:m)
{
t<-New_ratio_distance_between_objects(Data[Data[,1]==j,p],Data[Data[,1]==dist[n],p])%*%ddens[j]
}
if(t<yy)
{
yy<-t
}
}
mindist<-rbind(mindist,yy)
}
x<-which(mindist==max(mindist))
dist<-rbind(dist,x)
}
dist<-as.matrix(dist)
}
membershipdegree<-function(object,set,j,a)
{
Udata<-as.matrix(unique(set[,1]))
tempa=NNew_ratio_distance_between_objects(object,set[set[,1]==j,])
tempc=0
for(i in 1:length(Udata))
{
tempb=NNew_ratio_distance_between_objects(object,set[set[,1]==i,])
tempc=tempc+(tempa/tempb)^(1/(a-1))
}
num=1/tempc
}
My_Nean_New_ratio_computing_modes<-function(data)
{
data1<-unique(data[,1])
q<-length(data1)
Vx<-vector()
for(i in 1:q)
{
x<-Data[Data[,1]==data1[i],2]
v<-as.data.frame(t(table(x)))[,c(2,3)]
xx<-v[,2][match(x,v[,1])]
m<-length(x)
px<-xx/m
Lx<-cbind(x,px)
Vx<-rbind(Vx,Lx)
}
temp_Vx<-as.matrix(tapply(Vx[,2],Vx[,1],sum))
att_Vx<-sort(unique(data[,2]),decreasing = FALSE)
att_ind<-cbind(att_Vx,temp_Vx)
temp_value<-att_ind[order(att_ind[,2],decreasing = T),]
row.names(temp_value)<-c(1:length(att_Vx))
r<-round((sum(length(data[,2])))/q)
SS<-vector()
TT<-unique(temp_value[,2])
for(i in 1:length(TT))
{
SS[i]<-length(which(TT[i]==temp_value[,2]))
}
TT_matrix<-matrix(c(TT),ncol=1)
SS_matrix<-matrix(c(SS),ncol=1)
Ttemp_value<-cbind(TT_matrix,SS_matrix)
nT<-nrow(Ttemp_value)
aa<-0
bb<-0
for(m in 1:nT)
{
aa<-length(which(temp_value[,2]==max(temp_value[,2])))
bb<-(bb+aa)
result<-temp_value[(1:aa),]
if (bb>=r)  break
else  temp_value<-temp_value[-(1:aa),]
}
tempzz<-vector()
temp_value<-att_ind[order(att_ind[,2],decreasing = T),]
row.names(temp_value)<-c(1:length(att_Vx))
new_mode<-vector()
dd<-which(temp_value[,1]==result[1])[1]
new_mode<-as.matrix(temp_value[1:(dd-1),1])
tempzz<-t(combn(result,r-length(new_mode)))
nt<-nrow(tempzz)
union_value_F<-vector()
for(j in 1:nt)
{
union_value_frequency<-0
for(i in 1:length(new_mode))
{
union_value<-union(new_mode[i],tempzz[j,])
for(e in 1:q)
{
data2<-data[data[,1]==data1[e],2]
if(all(is.element(union_value,data2)))
{
union_value_frequency<-length(union_value)/length(data2)
union_value_frequency<-union_value_frequency+1}
}
}
union_value_F[j]<-union_value_frequency
}
cc<-which(union_value_F==max( union_value_F))[1]
NEW_modes<-union(new_mode,tempzz[cc,])
}
New_ratio_distance_between_objects<-function(DData1,DData2)
{
ddateset<-vector()
DDistance<-vector()
DDistance<-0
ml<-length(union(DData1, DData2))
gl<-length(intersect(DData1, DData2))
DDistance<-(1-gl/ml)
ddateset<-DDistance
}
Object_in_set<-function(object,set)
{
Udata<-as.matrix(unique(set[,1]))
Nc<-ncol(object)
for(i in 1:length(Udata))
{
MM<-0
for(q in 2:Nc)
{
MM<-MM+New_ratio_distance_between_objects(object[,q],set[set[,1]==i,q])
}
if(MM==0)
{num<-i
break
}else{
num<-0
}
}
j<-num
}
ratio_distance_between_objects<-function(DData1,DData2)
{
ddateset<-vector()
DDistance<-vector()
DDistance<-0
ml<-length(union(DData1, DData2))
gl<-length(intersect(DData1, DData2))
DDistance<-(gl/ml)
ddateset<-DDistance
}
K<-3
a<-1.1
InitialCenters<-NULL
Data<-as.matrix(Data)
nc<-ncol(Data)
if(is.null(InitialCenters)){
DDist<-K_initial_centers(Data,K)
DD<-length(DDist)
centers<-vector()
ICenters<-vector()
IniCenters<-vector()
for(m in 1:DD)
{
ICenters<-Data[Data[,1]==DDist[m],2:nc]
IniCenters<-cbind(m,ICenters)
centers<-rbind(centers,IniCenters)
}
}else{
for(n in 1:K)
{
ICenters<-Data[Data[,1]==InitialCenters[n],2:nc]
IniCenters<-cbind(n,ICenters)
centers<-rbind(centers,IniCenters)
}
}
ni<-as.matrix(centers)
ni
udata<-as.matrix(unique(Data[,1]))
cid<-matrix(0,nrow=1,ncol=K)
nr<-matrix(1,nrow=1,ncol=K)
nj<-vector()
D_Dist<-vector()
iter<-1
objectvalue<-vector()
dist<-vector()
iiter<-1000
for(i in 1:length(udata))
{
Dist<-vector()
i_bolck_Newdata<-Data[Data[,1]==udata[i],]
NN<-Object_in_set(i_bolck_Newdata,ni)
if(NN!=0){
cid[i]<-NN
}else{
for(j in 1:K)
{
dist=membershipdegree(i_bolck_Newdata,ni,j,a)
Dist<-rbind(Dist,dist)
}
Fw_dist<-as.matrix(Dist)
ind<-which(Fw_dist==max(Fw_dist[,1]),arr.ind = T)[1]
cid[i]<-ind
}
}
cid
nr<-table(cid)
temp_new_clusters<-vector()
modesset<-vector()
new_modesset<-vector()
NEW_modesset<-vector()
for(p in 1:K)
{
np<-length(which(cid==p))
t_temp<-udata[which(cid==p),]
New_data<-vector()
NNew_data<-vector()
if(np==1){
modesset<-matrix(c(Data[which(Data[,1]==t_temp),2:nc]))
}else
{
for(j in 1:np)
{
NNew_data<-rbind(NNew_data,Data[Data[,1]==t_temp[j],])
}
for(q in 2:nc)
{
New_data<-cbind(NNew_data[,1],NNew_data[,q])
MModesset<-My_Nean_New_ratio_computing_modes(New_data)
modesset<-rbind(modesset,MModesset)
}
}
modesset<-as.matrix(modesset)
modesset<-matrix(c(t(modesset)))
new_modesset<-cbind(p,modesset)
NEW_modesset<-rbind(NEW_modesset,new_modesset)
}
nj<-as.matrix(NEW_modesset)
nj
My_Nean_New_ratio_computing_modes_mr<-function(data)
{
data1<-unique(data[,1])
q<-length(data1)
Vx<-vector()
for(i in 1:q)
{
x<-data[data[,1]==data1[i],2]
v<-as.data.frame(t(table(x)))[,c(2,3)]
xx<-v[,2][match(x,v[,1])]
m<-length(x)
px<-xx/m
Lx<-cbind(x,px)
Vx<-rbind(Vx,Lx)
}
temp_Vx<-as.matrix(tapply(Vx[,2],Vx[,1],sum))
att_Vx<-sort(unique(data[,2]),decreasing = FALSE)
att_ind<-cbind(att_Vx,temp_Vx)
temp_value<-att_ind[order(att_ind[,2],decreasing = T),]
row.names(temp_value)<-c(1:length(att_Vx))
r<-round((sum(length(data[,2])))/q)
SS<-vector()
TT<-unique(temp_value[,2])
for(i in 1:length(TT))
{
SS[i]<-length(which(TT[i]==temp_value[,2]))
}
TT_matrix<-matrix(c(TT),ncol=1)
SS_matrix<-matrix(c(SS),ncol=1)
Ttemp_value<-cbind(TT_matrix,SS_matrix)
nT<-nrow(Ttemp_value)
aa<-0
bb<-0
for(m in 1:nT)
{
aa<-length(which(temp_value[,2]==max(temp_value[,2])))
bb<-(bb+aa)
result<-temp_value[(1:aa),]
if (bb>=r)  break
else  temp_value<-temp_value[-(1:aa),]
}
tempzz<-vector()
temp_value<-att_ind[order(att_ind[,2],decreasing = T),]
row.names(temp_value)<-c(1:length(att_Vx))
new_mode<-vector()
dd<-which(temp_value[,1]==result[1])[1]
new_mode<-as.matrix(temp_value[1:(dd-1),1])
tempzz<-t(combn(result,r-length(new_mode)))
nt<-nrow(tempzz)
union_value_F<-vector()
for(j in 1:nt)
{
union_value_frequency<-0
for(i in 1:length(new_mode))
{
union_value<-union(new_mode[i],tempzz[j,])
for(e in 1:q)
{
data2<-data[data[,1]==data1[e],2]
if(all(is.element(union_value,data2)))
{
union_value_frequency<-length(union_value)/length(data2)
union_value_frequency<-union_value_frequency+1}
}
}
union_value_F[j]<-union_value_frequency
}
cc<-which(union_value_F==max( union_value_F))[1]
NEW_modes<-union(new_mode,tempzz[cc,])
}
My_Nean_New_ratio_computing_modes_mr(Data)
M<-My_Nean_New_ratio_computing_modes_mr(Data)
M
Data
K
ni
Data<-as.matrix(Data)
nc<-ncol(Data)
udata<-as.matrix(unique(Data[,1]))
cid<-vector()
objectvalue<-vector()
ddist<-vector()
for(i in 1:length(udata))
{
for(j in 1:K)
{
dist<-0
i_bolck_Newdata<-Data[Data[,1]==udata[i],2]
k_block<-ni[ni[,1]==j,2]
Dist<-New_ratio_distance_between_objects(i_bolck_Newdata,k_block)
dist<-Dist+dist
ddist[j]<-dist
}
ind<-which(ddist==min(ddist),arr.ind=T)[1]
cid[i]<-ind
}
cid
